<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gtk on Aşkın Özgür</title>
    <link>https://blog.askin.ws/tags/gtk/</link>
    <description>Recent content in gtk on Aşkın Özgür</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>tr-TR</language>
    <managingEditor>askin@askin.ws (Aşkın Özgür)</managingEditor>
    <webMaster>askin@askin.ws (Aşkın Özgür)</webMaster>
    <lastBuildDate>Thu, 08 Apr 2010 06:19:00 +0300</lastBuildDate><atom:link href="https://blog.askin.ws/tags/gtk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gtk &lt;= 2.18.9 Pencere Gizleme Sorunu</title>
      <link>https://blog.askin.ws/blog/gtk-2-18-9-pencere-gizleme-sorunu/</link>
      <pubDate>Thu, 08 Apr 2010 06:19:00 +0300</pubDate>
      <author>askin@askin.ws (Aşkın Özgür)</author>
      <guid>https://blog.askin.ws/blog/gtk-2-18-9-pencere-gizleme-sorunu/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.askin.ws/uploads/2010/04/gtk.png&#34; alt=&#34;Gtk&#34; title=&#34;Gtk&#34;&gt;Gece gece uyku tutmadı var olan bir programı kurcalamaya başladım. Amacım programın sitem çekmecesinden çalışabilir hale getirmekti.&lt;/p&gt;
&lt;p&gt;Her şeyi yaptım fakat bir türlü pencereyi gizleyemiyordum :) Doküman &lt;em&gt;gtk_window_get_mnemonics_visible ()&lt;/em&gt; fonksiyonunu kullanmamı söylüyordu, fakat kullandığım gtk sürümünde bu fonksiyon tanımlı değildi(2.18.7). Eski sürüm için olan dokümanı incelediğimde bu işi yapan bir fonksiyon yoktu.
Sistemde kurulu gtk ve python ile bu işi yapabiliyordum. Normal olarak c ile de yapabilmem lazımdı:)
Biraz inceledikten sonra, önce pencereyi gizleyen, ardından boyutunu eski haline getirip sonra tekrar gösteren bir fonksiyon olduğunu fark ettim. Benim istediğim işi yapıyor fakat yanında birde fazlalığı vardı.(gtk_window_reshow_with_initial_size)
İnternette biraz daha araştırıp umudumu kaybedince mecburen kaynak koda baktım.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;grep -rHn gtk_window_reshow_with_initial_size *
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;bu komut bana gtk_window_reshow_with_initial_size fonksiyonun nerelerde olduğunu gösterdi.
Bu fonksiyonunun içine bakınca istediğim kodu hemen buldum :)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;gtk_window_reshow_with_initial_size (GtkWindow &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;window)
{
  GtkWidget &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;widget;

  g_return_if_fail (GTK_IS_WINDOW (window));

  widget &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GTK_WIDGET (window);

  gtk_widget_hide (widget);
  gtk_widget_unrealize (widget);
  gtk_widget_show (widget);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Önce pencereyi widgeta çevirebilme imkanım varmış, böyle basit bir şeyi nasıl bulamadım bilemiyorum.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PyGtk ile Sistem Çekmecesi</title>
      <link>https://blog.askin.ws/blog/pygtk-ile-sistem-cekmecesi/</link>
      <pubDate>Wed, 07 Apr 2010 21:53:00 +0300</pubDate>
      <author>askin@askin.ws (Aşkın Özgür)</author>
      <guid>https://blog.askin.ws/blog/pygtk-ile-sistem-cekmecesi/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://blog.askin.ws/uploads/2010/04/gtk.png&#34; alt=&#34;Gtk&#34; title=&#34;Gtk&#34;&gt;Gtk ile çok kolay bir şekilde geliştirdiğiniz uygulamayı sistem çekmecesinde gösterebilirsiniz.&lt;/p&gt;
&lt;p&gt;Ufak bir örnek kod veriyorum. Onun üzerinden anlatacağım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pygtk
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gtk

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ShowIcon&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;StatusIcon()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;icon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gtk.png&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;icon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_tooltip_text(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello Python!!!&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;icon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_visible(&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;icon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;activate&amp;#34;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hello)
        gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main()

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;(self, widget):
        print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello Python !!!&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    icon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ShowIcon()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;6. satırda asıl işimizi yapacak olan &lt;em&gt;StatusIcon&lt;/em&gt; nesnesini yaratıyoruz.&lt;br&gt;
7. satırda sistem çekmecesinde hangi ikonun görüntüleneceğini belirtiyoruz. &lt;em&gt;set_from_file&lt;/em&gt; ikonu dosyadan alacağımız anlamına geliyor. Eğer gtk&amp;rsquo;nın sunduğu standart ikonları kullanmak istiyorsanız set_from_stock kullanmalısınız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;icon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_stock(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STOCK_ABOUT)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;8. satırda ikonun üzerine geldiğimizde görünmesini istediğimiz yazıyı belirliyoruz.&lt;br&gt;
9. satırda ikonun başlangıçtaki görünürlüğünü belirliyoruz. Bu satırı yazmasak da görünür başlıyor.&lt;br&gt;
10. satırda ikonun &lt;em&gt;&amp;ldquo;activate&amp;rdquo;&lt;/em&gt; sinyali aldığında çağırmasını istediğimiz metodu belirliyoruz. Kısacası üzerine tıklandığında ne iş yapacağını belirtiyoruz. &lt;em&gt;&amp;ldquo;activate&amp;rdquo;&lt;/em&gt; yerine &lt;em&gt;&amp;ldquo;popup_menu&amp;rdquo;&lt;/em&gt; yazarsak ikona sağ tıkladığımızda çağrılacak metodu belirliyoruz.&lt;br&gt;
11. gkt.main() haydi yapalım şu işi manasında :)&lt;/p&gt;
&lt;p&gt;Ayrıntılı dökümanı &lt;a href=&#34;http://www.pygtk.org/docs/pygtk/class-gtkstatusicon.html&#34;&gt;PyGtk Belgelerinde&lt;/a&gt; bulabilirisiniz. Yukarıda verdiğim kodu ve benim kullandığım ikonu &lt;a href=&#34;https://blog.askin.ws/uploads/2010/04/python-system-tray.zip&#34;&gt;buradan&lt;/a&gt; indirebilirsiniz.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PyGtk ve Thread Sorunu</title>
      <link>https://blog.askin.ws/blog/pygtk-ve-thread-sorunu/</link>
      <pubDate>Tue, 06 Apr 2010 23:03:00 +0300</pubDate>
      <author>askin@askin.ws (Aşkın Özgür)</author>
      <guid>https://blog.askin.ws/blog/pygtk-ve-thread-sorunu/</guid>
      <description>PyGtk ile ara yüzüzünü hazırladığım bir program içinde thread kullanmam gerekiyordu. Kod çalışıyordu fakat thread işlemi istediğim gibi çalışmıyordu. Arayüzde bir değişiklik olduğu zaman thread çalışıyor, onun dışında hiç bir şekilde tepki vermiyordu.
Uzun süre hatanın kodda olabileceğini düşündüm. Ama sonunda python gtk.main() ve thread 3&amp;rsquo;lüsünü aynı sorgu içinde googleda aratınca cevabı buldum. Gtk&amp;rsquo;ya thread kullandığımı anlatmam gerekiyordu :)
gtk.gdk.threads_init() Bu satırı kodumun başına eklediğimde herşey istediğim gibi çalışmaya başladı :)
Sizde böyle bir sorunla karşılaşırsanız aklınızda bulunsun :)</description>
    </item>
    
  </channel>
</rss>
