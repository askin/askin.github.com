<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on Aşkın Özgür</title><link>https://blog.askin.ws/tags/oop/</link><description>Recent content in OOP on Aşkın Özgür</description><generator>Hugo -- gohugo.io</generator><language>tr-TR</language><managingEditor>askin@askin.ws (Aşkın Özgür)</managingEditor><webMaster>askin@askin.ws (Aşkın Özgür)</webMaster><lastBuildDate>Tue, 27 Apr 2010 04:08:00 +0300</lastBuildDate><atom:link href="https://blog.askin.ws/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>C ile Nesne Yaratmak</title><link>https://blog.askin.ws/blog/c-ile-nesne-yaratmak/</link><pubDate>Tue, 27 Apr 2010 04:08:00 +0300</pubDate><author>askin@askin.ws (Aşkın Özgür)</author><guid>https://blog.askin.ws/blog/c-ile-nesne-yaratmak/</guid><description>&lt;p>&lt;img src="https://blog.askin.ws/uploads/2010/04/c3po.jpg" alt="" title="C-3PO">Evet kışkırtıcı bir başlık attım :)
Aslında yapacağımız olay bir structı nesne gibi kullanmak. Buna benzer bir kodu yıllar önce görmüştüm. O günden bu güne sürekli böyle bir şeyi nasıl yaparım diye araştırdım. Anca bugün çözebildim olayı ;)
Kodu aşağıda yorum satırıyla beraber veriyorum. Yorumlarda gerekli açıklamaları yaptım.&lt;/p>
&lt;p>Bu yazıyla C-3PO nun ne lakası var diyebilirsiniz. C ile resim ararken karşıma bu çıktı, bende boş durmasın dedim :)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> * Sınıfımızı yaratıyoruz
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;span style="color:#66d9ef">struct&lt;/span> _myobject {
&lt;span style="color:#75715e">// alt alanlar
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a, b;
&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> * Metod
&lt;/span>&lt;span style="color:#75715e"> * Burada fonksiyon pointerı tanımlıyoruz
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>add)(&lt;span style="color:#66d9ef">struct&lt;/span> _myobject&lt;span style="color:#f92672">*&lt;/span>);
};
&lt;span style="color:#75715e">// struct ön ekinden kurtuluyoruz
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _myobject MyObject;
&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> * Asıl işi yapacak fonksiyonu tanımlıyoruz
&lt;/span>&lt;span style="color:#75715e"> * MyObject structını parametre olarak alıyor
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">realAdd&lt;/span>(MyObject&lt;span style="color:#f92672">*&lt;/span> a) {
&lt;span style="color:#66d9ef">return&lt;/span> a&lt;span style="color:#f92672">-&amp;gt;&lt;/span>a &lt;span style="color:#f92672">+&lt;/span> a&lt;span style="color:#f92672">-&amp;gt;&lt;/span>b;
}
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span> ( &lt;span style="color:#66d9ef">void&lt;/span> ) {
&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> * Nesnemizi oluşturuyoruz.
&lt;/span>&lt;span style="color:#75715e"> * add pointerına fonksiyonu atıyoruz
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
MyObject mo &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, realAdd};
printf(&lt;span style="color:#e6db74">&amp;#34;A + B = %d&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, mo.add(&lt;span style="color:#f92672">&amp;amp;&lt;/span>mo));
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Kodun başına stdio.h headerını eklemekte fayda var. WP sıkıntı çıkarttığı için silmek zorunda kaldım. Kodun düzgün halini &lt;a href="http://github.com/askin/misc/raw/master/fun/struct-function.c">burada&lt;/a> bulabilirsiniz.&lt;/p></description></item></channel></rss>